name: CI
on:
  ## Events from external actor, or from code pushed (includes tags pushed)
  push:
  pull_request:
  ## Events from the GitHub UI (as when publishing a release)
  # When a release is "released" (draft or released published, no pre-release) - https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#release
  release:
    types: [released]
  # When a tag or branch is created in the GitHub UI
  create:
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends bats
      - name: Set up Git user
        run: |
          git config --local user.name "${GITHUB_ACTOR}"
          git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: Build
        run: |
          make build
          make test
          make README.md
      - name: Deploy
        if: github.event_name != 'pull_request'
        run: make deploy-README.md deploy
        env:
          DOCKERHUB_SOURCE_TOKEN: ${{ secrets.DOCKERHUB_SOURCE_TOKEN }}
          DOCKERHUB_TRIGGER_TOKEN: ${{ secrets.DOCKERHUB_TRIGGER_TOKEN }}
  ## Ensure that the updatecli configuration are valid without waiting for the daily execution from the workflow "Updatecli"
  updatecli-diff:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Diff
        uses: updatecli/updatecli-action@v1
        with:
          command: diff
          flags: "--config ./updatecli/updatecli.d --values ./updatecli/values.yaml"
        env:
          UPDATECLI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
